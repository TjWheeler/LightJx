{"version":3,"file":"bundle.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAiB,QAAID,IAErBD,EAAc,QAAIC,GACnB,CATD,CASGK,MAAM,I,+HCTT,YAEa,EAAAC,kBAAoB,IAAI,EAAAC,kBACrC,8BAOA,QANkB,EAAAC,MAAd,SAAoBC,EAAeC,GAC/B,IAAIC,EAAY,IAAI,EAAAC,gBAAgB,EAAAN,mBAGpC,OAFAK,EAAUE,UAAYJ,EACtBE,EAAUD,YAAcA,EACjBC,CACX,EACJ,EAPA,GAAa,EAAAG,SAAAA,C,2vBCDb,gBAEa,EAAAP,kBAAb,WACW,KAAAQ,sBAAwB,IACnC,EACA,iBACI,WAAYC,GAOL,KAAAC,SAAmB,EACnB,KAAAC,aAAuB,GACvB,KAAAC,cAA0B,GACzB,KAAAC,YAA2B,GAT/BC,KAAKL,QAAUA,CACnB,CAqCJ,OA5BY,YAAAM,IAAR,SAAYX,GACRU,KAAKD,YAAYG,KAAKZ,EAC1B,EACO,YAAAa,SAAP,WAEI,OADAH,KAAKC,IAAI,IAAIG,EAAWC,kBAAkBL,KAAKR,UAAWQ,KAAKX,cACxDW,IACX,EACO,YAAAM,SAAP,SAAgBC,GACZP,KAAKO,MAAQA,EACbP,KAAKF,cAAgB,GACrBE,KAAKH,aAAe,GAEpB,IADA,IACSW,EAAI,EAAGA,EAAIR,KAAKD,YAAYU,OAAQD,IAAK,CAC9C,IAAIlB,EAAYU,KAAKD,YAAYS,GACjC,IACiBlB,EAAUgB,SAASN,KAAKO,QAGjCP,KAAKF,cAAcI,KAAKZ,EAAUO,a,CAExC,MAAOa,GACLC,QAAQC,MAAMF,GACdV,KAAKF,cAAcI,KAAK,oCAA6B,G,EAI7D,OADIF,KAAKF,cAAcW,SAAQT,KAAKH,aAAeG,KAAKF,cAAce,KAAKb,KAAKL,QAAQD,uBAAyB,OAC1GM,IACX,EACJ,EAxCA,GAAa,EAAAT,gBAAAA,C,ikBCPb,IAEA,cACI,WAAYC,EAAmBsB,G,OAE3B,YAAMtB,EAAWsB,IAAiB,IACtC,CAOJ,OAXuC,OAKnC,YAAAR,SAAA,SAASC,GACL,OAAa,OAAVA,GAA4B,KAAVA,QAAkC,IAAZ,EAChCP,KAAKe,KAAK,eAEdf,KAAKgB,SAChB,EACJ,EAXA,CAFA,OAEuCC,eAA1B,EAAAZ,kBAAAA,C,sFCCb,iBACI,WAAYb,EAAmBsB,GAI/B,KAAAI,iBAA2B,YAC3B,KAAAtB,SAAmB,EACnB,KAAAC,aAAuB,GAGvB,KAAAsB,gBAAsBC,EARlBpB,KAAKR,UAAYA,EACjBQ,KAAKc,iBAAmBA,CAC5B,CAkBJ,OAXc,YAAAC,KAAV,SAAeM,GAGX,OAFArB,KAAKJ,SAAU,EACfI,KAAKH,aAAe,UAAGG,KAAKc,kBAAoBd,KAAKR,UAAS,YAAI6B,IAC3D,CACX,EACU,YAAAL,QAAV,WAGI,OAFAhB,KAAKJ,SAAU,EACfI,KAAKH,aAAe,IACb,CACX,EAEJ,EAtBA,GAAsB,EAAAoB,cAAAA,C,GCFlBK,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBJ,IAAjBK,EACH,OAAOA,EAAa7C,QAGrB,IAAIC,EAASyC,EAAyBE,GAAY,CAGjD5C,QAAS,CAAC,GAOX,OAHA8C,EAAoBF,GAAUG,KAAK9C,EAAOD,QAASC,EAAQA,EAAOD,QAAS2C,GAGpE1C,EAAOD,OACf,C,oHCtBA,aAAS,0EAAAa,QAAQ,IAAE,mFAAAR,iBAAiB,G","sources":["webpack://lightjx/webpack/universalModuleDefinition","webpack://lightjx/./src/Validate.ts","webpack://lightjx/./src/ValidatorFluent.ts","webpack://lightjx/./src/validators/CoreValidators.ts","webpack://lightjx/./src/validators/ValidatorBase.ts","webpack://lightjx/webpack/bootstrap","webpack://lightjx/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lightjx\"] = factory();\n\telse\n\t\troot[\"lightjx\"] = factory();\n})(self, () => {\nreturn ","import { ValidationOptions, ValidatorFluent } from \"./ValidatorFluent\";\r\n\r\nexport const validationOptions = new ValidationOptions();\r\nexport class Validate {\r\n    public static field(name?: string, displayName?: string): ValidatorFluent {\r\n        var validator = new ValidatorFluent(validationOptions);\r\n        validator.fieldName = name;\r\n        validator.displayName = displayName;\r\n        return validator;\r\n    }\r\n}\r\n","//import { validationOptions } from \".\";\r\nimport { Validator } from \"./Validator\";\r\nimport * as Validators from \"./validators/CoreValidators\";\r\n\r\nexport class ValidationOptions {\r\n    public errorMessageSeperator = \". \";\r\n}\r\nexport class ValidatorFluent {\r\n    constructor(options: ValidationOptions) {\r\n        this.options = options;\r\n    }\r\n    private options: ValidationOptions;\r\n    public fieldName?: string;\r\n    public displayName?: string;\r\n    public input: any;\r\n    public isValid: boolean = false;\r\n    public errorMessage: string = \"\";\r\n    public errorMessages: string[] = [];\r\n    private _validators: Validator[] = [];\r\n    private add(validator: Validator) {\r\n        this._validators.push(validator);\r\n    }\r\n    public required(): ValidatorFluent {\r\n        this.add(new Validators.RequiredValidator(this.fieldName, this.displayName))\r\n        return this;\r\n    }\r\n    public validate(input: any): ValidatorFluent {\r\n        this.input = input;\r\n        this.errorMessages = [];\r\n        this.errorMessage = \"\";\r\n        var isValid = true;\r\n        for (var i = 0; i < this._validators.length; i++) {\r\n            var validator = this._validators[i];\r\n            try {\r\n                var result = validator.validate(this.input);\r\n                if (!result) {\r\n                    isValid = false;\r\n                    this.errorMessages.push(validator.errorMessage);\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.errorMessages.push(`Error in validator ${typeof (validator)}`);\r\n            }\r\n        }\r\n        if (this.errorMessages.length) this.errorMessage = this.errorMessages.join(this.options.errorMessageSeperator || \". \");\r\n        return this;\r\n    }\r\n}","import { ValidatorBase } from \"./ValidatorBase\";\r\n\r\nexport class RequiredValidator extends ValidatorBase {\r\n    constructor(fieldName?:string, fieldDisplayName?:string)\r\n    {\r\n        super(fieldName, fieldDisplayName);\r\n    }\r\n    validate(input?:any): boolean {\r\n        if(input === null || input === \"\" || typeof(input) === typeof(undefined)) {\r\n            return this.fail(\"is required\");\r\n        }\r\n        return this.succeed();\r\n    }\r\n}\r\n","import { Validator } from \"../Validator\";\r\n\r\n\r\nexport abstract class ValidatorBase implements Validator {\r\n    constructor(fieldName?:string, fieldDisplayName?:string) {\r\n        this.fieldName = fieldName;\r\n        this.fieldDisplayName = fieldDisplayName;\r\n    }\r\n    defaultFieldName: string = \"The Field\";\r\n    isValid: boolean = false;\r\n    errorMessage: string = \"\";\r\n    fieldName?: string;\r\n    fieldDisplayName?: string;\r\n    expression?: string = undefined;\r\n    protected fail(message:string) : boolean {\r\n        this.isValid = false;\r\n        this.errorMessage = `${this.fieldDisplayName || this.fieldName} ${message}`;\r\n        return false;\r\n    }\r\n    protected succeed() : boolean {\r\n        this.isValid = true;\r\n        this.errorMessage = \"\";\r\n        return true;\r\n    }\r\n    abstract validate(input?:any): boolean;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export { Validate, validationOptions } from './Validate';"],"names":["root","factory","exports","module","define","amd","self","validationOptions","ValidationOptions","field","name","displayName","validator","ValidatorFluent","fieldName","Validate","errorMessageSeperator","options","isValid","errorMessage","errorMessages","_validators","this","add","push","required","Validators","RequiredValidator","validate","input","i","length","e","console","error","join","fieldDisplayName","fail","succeed","ValidatorBase","defaultFieldName","expression","undefined","message","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}